[ 객체 ]
    - 자바의 객체지향 언어
        - 객체지향 : 자바 , 파이썬 , 자바스크립트 , C# 등등
    - 객체 Object : (손님)객 , 본인 아닌 타인 개체
        vs 주체 Subject : 객관에 대립되는 말로 주관을 가진 개체 , '나' , 본인
        - 개체 : 하나의 형체
    -> 예] 개발자(주체/나)가 컴퓨터(프로그래밍)에서 형체(객체) 만들기
    생활속 객체] 의자 , 컴퓨터 , 안경 , 스크린 , 공기 , 물 등등
        강사(김현수/주체) 입장에서 '유재석' 학생은 객체
        학생(유재석/주체) 입장에서 '김현수' 강사은 객체

[ 자바 객체 ]
    1. 클래스 기반의 메모리 공간
    2. 클래스란? 변수와 메소드를 정의하는 일종의틀 , 기본타입이 아닌 새로운 타입 생성
        -> 클래스 정의한다는것은 새로운 타입를 만드는것과 동일
    3. 클래스 멤버
        1.멤버변수/필드           : 객체가 가지는 고유한 성질
        2.생성자                 : 객체가 생성될때 초기화 함수
        3.메소드/멤버함수          : 객체의 특정한 명령어를 수행하는 공간/행위
    4. 객체란 : 자바에서 클래스타입으로 생성된 메모리 공간
    5. 객체 생성 방법 : new 생성자명()
        주의할점 : 객체는 변수가 참조하지 않으면 GC 의해 자동으로 객체 메모리는 제거된다.
            String str = new String();   // 변수1개 , 객체1(105번지)개
            str = new String();         // 변수1개 , 객체1(106번지)개 , 105번지 객체 사라졌다.

    6. 객체의 다형성
        - 다형성 : 하나의 객체가 여러가지 타입으로 변환 될수 있는 성질
            - 캐스팅/변환 : 자동타입변환 , 강제타입변환 , 클래스(업/다운캐스팅)
                - 자동타입변환 : byte -> short -> int -> long -> float -> double , 작은것 -> 큰것 순으로
                - 강제타입변환 : double -> float -> long -> int -> short -> byte , 큰것 -> 작은것 순으로
                - (상속) : 클래스의 멤버변수를 물려받는 문법 , 키워드 : extends ,물려받는 행위(승계)
                    업캐스팅 : 하위(자식)타입이 상위(부모) 타입으로 변환
                    다운캐스팅 : 상위(부모) 타입에서 하위(자식) 타입으로 변환  , 타입변환 객체가 본래 자식타입 이어야만 가능하다.
                    사용처 : 클래스의 멤버코드들이 중복일때
                    - 객체는 생성될때 상위 타입의 객체까지 포함해서 같이 생성된다.
                        ex] BoardDao extends Dao{}
                            new BoardDao() 하게 되면 총 객체는 1.BoardDao객체 2.Dao객체 3.Object객체
                            -> 눈에 보이지 않는 상위타입의 객체도 항상 같이 만들어진다.!!



